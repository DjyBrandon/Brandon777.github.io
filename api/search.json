[{"id":"d47a36c3a510133b5b347d3a187e7783","title":"Opertion System Outline","content":"0 前言0.1 前言\n基本概念、基本方法\n设计原理、实现方法\n形成、类型、功能\n进程管理、存储器管理、设备管理、文件管理\n网络操作系统、分布式操作系统\n\n0.2 内容\n背景知识\n\n基本概念、发展、特性、功能和结构设计\n硬件环境\n\n\n进程\n进程和线程的\n\n基本概念\n进程控制\n进程调度\n进程同步\n进程通信\n死锁\n\n\n存储管理\n\n概念和功能\n分区和页式存储管理\n虚拟页式存储器管理\n\n\n文件和输入/输出管理\n\n操作系统的用户接口管理\n文件管理的基本概念和功能\n设备管理的基本概念和功能\n\n\n网络与分布式系统\n\n网络操作系统\n分布式操作系统\n\n\n\n1 引论1.1 操作系统的概念\n计算机系统\n硬件（子）系统、软件（子）系统\n计算机系统的层次结构\n软件分类\n系统软件\n支撑软件\n应用软件\n\n\n\n\n操作系统简介\n操作系统的地位\n操作系统的定义\n操作系统的目标\n\n\n\n1.2 操作系统的形成与发展\n操作系统的形成\n单道批处理系统\n多道批处理系统\n分时系统\n实时系统\n操作系统的\n推动操作系统\n\n1.3 研究操作系统的几种观点\n软件的观点\n计算机系统资源管理的观点\n进程的观点\n用户与计算机硬件系统之间接口的观点\n虚拟机器观点\n服务提供者观点\n\n1.4 操作系统的功能与特征\n通用操作系统\n操作系统的功能\n处理机、存储器、设备、文件、用户接口\n\n\n操作系统的特征\n并发、共享、虚拟、异步性\n\n\n\n1.5 操作系统结构设计\n传统的操作系统结构\n模块化结构\n层次结构\n\n\n现代的操作系统结构\n微内核\n客户机 / 服务器模式\n\n\n\n2 操作系统的硬件环境2.1 中央处理机（CPU）\nCPU的构成与基本工作方式\n特权指令与非特权指令\n处理机的状态\n程序状态字PSW\n\n2.2 存储系统\n存储器类型\n存储器层次结构\n存储分块\n存储保护\n\n2.3 缓冲技术与中断技术\n缓冲技术\n中断技术\n概念\n分类\n组成部分\n基本功能\n中断逻辑与中断寄存器\n多级中断和中断屏蔽\n中断响应\n中断处理\n时钟\n\n\n\n3 进程与进程管理3.1 进程引入\n前趋图\n程序顺序执行\n程序并发执行\n多道程序设计\n必须解决的问题\n\n3.2 进程\n引入进程原因\n进程概念\n进程的基本状态和转换\n\n\n\n进程控制块PCB\n进程控制\n\n3.3 进程调度\n调度的基本概念\n功能\n调度方式\n\n\n进程调度算法\n先进先出（FIFO）算法\n最短处理机运行期优先调度算法\n最高响应比优先调度算法\n优先级调度算法\n时间片轮转调度算法\n前后台调度算法\n多级反馈队列轮转算法\n\n\n进程调度的时间和过程\n\n3.4 线程的基本概念\n线程的引入\n线程的定义和属性\n线程与进程的比较\n线程的实现机制\n用户级线程\n内核支持线程\n用户级和内核支持比较\n\n\n\n4 进程同步与通信4.1 进程间的相互作用\n进程间联系\n临界资源\n临界区\n同步机制应遵循的原则：空闲让进、忙则等待、优先等待、让权等待\n\n\n利用软件方法解决进程互斥问题\n利用硬件方法解决进程互斥问题\nTest-and-Set指令\nSwap指令\n\n\n信号量机制\n记录型：wait、signal\nAND型：swait、ssignal\n一般“信号量集”机制\n\n\n经典进程同步问题\n生产者-消费者问题\n读者-写者问题\n哲学家进餐问题\n嗜睡的理发师问题\n\n\n管程机制\n\n4.2 进程通信\n基本概念\n进程通信的类型\n共享存储器系统\n消息传递系统\n管道通信\n\n\n直接通信和间接通信\n消息缓冲队列\n\n4.3 死锁\n产生死锁的四个必要条件\n互斥条件\n请求和保持条件\n不剥夺条件\n环路等待条件\n\n\n预防死锁\n摒弃“请求和保持”条件\n摒弃“不剥夺”条件\n摒弃“环路等待”条件\n\n\n避免死锁\n安全与不安全状态\n银行家算法\n安全性算法\n\n\n检测死锁\n资源分配图\n死锁定理\n死锁检测中的数据结构\n\n\n解除死锁\n\n5 存储器管理5.1 概述\n存储体系\n存储管理目的\n存储管理任务\n程序的链接和装入\n各种存储管理方式\n\n5.2 连续存储管理方式\n单一连续分配\n分区分配\n固定分区\n可变分区\n\n\n\n5.3 覆盖技术与交换技术\n覆盖技术\n交换技术\n\n5.4 分页存储管理方式\n工作原理\n动态地址变换\n快表\n两级和多级页表\n分配与回收\n\n5.5 分段存储管理方式\n基本思想（工作原理）\n动态地址变换\n分页和分段的主要区别\n\n5.6 段页式存储管理方式\n基本原理\n地址变换\n\n6 虚拟存储器管理6.1 概述\n局部性原理\n虚拟存储器特征\n虚拟存储器定义\n\n6.2 分页虚拟存储管理\n基本原理\n缺页中断结构\n地址变换结构\n页面置换算法\n内存分配策略和分配算法\n最小物理块数\n物理块的分配策略\n物理块分配算法\n调页策略\n\n\n抖动问题\n\n6.3 分段虚拟存储管理\n基本原理\n缺段中断结构\n段的动态链接\n段的共享\n\n7 用户接口管理7.1 概述\n命令接口\n程序接口\n图形接口\n\n7.2 命令接口\n联机命令接口\n命令的格式和分类\n终端处理程序\n命令解释程序\n\n\n脱机命令接口\n\n7.3 系统调用\n概念\n系统调用分类\n系统调用与一般过程调用的区别\n\n\n处理过程\n基本概念\n系统调用的执行过程大体上分成以下三步\n\n\n\n8 文件管理8.1 概述\n文件和文件系统\n文件的分类\n\n8.2 文件的结构和存取方式\n文件的存取方式\n文件的逻辑结构\n存储介质\n文件的物理结构\n\n8.3 文件目录\n文件目录管理应达到的要求\n文件控制块\n文件目录结构\n目录查找和改进\n\n8.4 文件系统的实现\n打开文件表\n外存空间管理\n\n8.5 文件的使用\n主要操作\n文件共享\n\n8.6 文件系统的安全性和数据一致性\n影响文件安全性主要因素\n防止人为因素造成的文件不安全性\n隐蔽文件和目录\n口令\n文件加密\n制定访问权限\n\n\n防止系统因素或自然因素造成的文件不安全性\n坏块管理\n磁盘容错技术\n备份\n\n\n文件系统的数据一致性\n块的一致性检查\n文件一致性检查\n\n\n\n8.7 磁盘调度\n先来先服务（FCFS）算法\n最短查找时间优先（SSTF）算法\n扫描算法\n电梯调度算法\n循环扫描策略\nN步扫描策略\nFSCAN算法\n\n\n磁盘的优化分布\n\n8.8 Linux 文件系统\nLinux 文件系统结构\nLinux 文件类型\nLinux 文件系统目录\nLinux 文件查找\nLinux 文件操作\nLinux 文件共享\nLinux 文件目录操作\nLinux 文件一致性处理\nLinux EXT2 文件系统\nEXT2 位示图和 I 节点图\nLinux 高速缓存\n\n9 设备管理9.1 概述\n设备的分类\n\n设备管理目标\n\n设备管理任务\n\n监视所有设备的状态\n\n\n\n制定设备分配策略\n设备的分配\n设备的回收\n\n\n\n9.2 I/O硬件特点\n设备组成\n设备接口\n设备控制器\n通道\nI/O 控制方式\n缓冲技术\n缓冲池\n\n9.3 I/O软件组成\nI/O 软件目标\n中断处理程序\n设备驱动程序\n独立于设备的软件\n用户空间的 I/O 软件\n\n9.4 设备分配\n设备分配中的数据结构\n设备独立性\n设备分配\n\n9.5 虚拟设备\nSpooling 技术\n共享打印机\n\n10 网络服务器与分布式系统10.1 分布式系统概述\n分布式能力\n\n通信结构\n\n开放式系统互连通信结构\nOSI七层模型\n\n物理层\n数据链路层\n网络层\n传输层\n会话层\n表示层\n应用层\n\n\n\n10.2 网络服务器\n服务器结构\n磁盘和文件服务器\n文件服务器\n磁盘服务器\n打印机服务器\n调制解调器服务器\n\n\n\n10.3 分布式进程管理\n分布式互斥\n集中式算法\n分布式算法\n克服时钟同步困难：事件定序法\n\n\n分布式算法\nLamport 分布式算法\n令牌传递法\n\n\n\n10.4 进程迁移\n进程迁移\n进程迁移机制\n迁移处理\n\n10.5 分布式进程通信\n信息传送机制\n远程过程调用\n确定分布式系统的全局状态\n全局状态和分布式瞬态\n分布式瞬态算法\n\n\n\n10.6 分布式进程同步与互斥\n事件定序法\n\n集中式算法\n\n分布式算法\n\n\nLamport 分布式算法\n\n\n令牌传递法\n\n\n10.7 分布式进程死锁问题\n资源分配中的死锁\n死锁的预防\n死锁的检测\n系统是集中式的控制\n分层控制\n分布式控制\n\n\n\n\n消息通信中的死锁\n相互等待\n消息死锁和资源死锁的区别\n破坏死锁方法：预防或检测\n\n\n没有空闲可用的消息缓冲区\n直接存储转发死锁\n间接存储转发死锁\n\n\n\n\n\n","slug":"Operation System Outline","date":"2022-10-03T09:01:36.000Z","categories_index":"Opertion System","tags_index":"Opertion System","author_index":"Brandon"},{"id":"6c60290e7688a2cab83459ffd68eb546","title":"1 计算机系统概论","content":"0 导读 脉冲信号\n\n\n\n\n\n1 计算机的分类1.1 电子计算机\n电子模拟计算机\n“模拟”就是相似的意思。模拟计算机的特点是数值由连续量来表示，运算过程也是连续的。\n\n电子数字计算机\n它是在算盘的基础上发展起来的，是用数目字来表示数量的大小。数字计算机的主要特点是按位运算，并且不连续地跳动计算。\n\n\n\n\n\n\n\n数字计算机\n模拟计算机\n\n\n\n\n数据表示方式\n数字 0/1\n电压\n\n\n计算方式\n数字计数\n电压组合和测量值\n\n\n控制方式\n程序控制\n盘上连线\n\n\n精度\n高\n低\n\n\n数据存储量\n大\n小\n\n\n逻辑判断能力\n强\n无\n\n\n\n\n1.2 数字计算机​        数字计算机根据计算机的效率、速度、价格、运行的经济性和适应性来划分，可以划分为两类：\n\n专用计算机\n专用机是最有效、最经济和最快速的计算机，但是它的适应性很差。\n\n通用计算机\n通用计算机适应性很大，但是牺牲了效率、速度和经济性。\n\n\n1.3 通用计算机​    通用计算机根据体积、简易性、功率损耗、性能指标、数据存储容量、指令规模和机器价格等可以分为：\n\n超级计算机\n大型机\n服务器\nPC机\n单片机\n多核机\n\n\n2 计算机发展简史2.1 计算机的五代变化\n第一代1946-1957年，电子管计算机：数据处理\n第二代1958-1964年，晶体管计算机：工业控制\n第三代1965-1971年，中小规模集成电路计算机：小型计算机\n第四代1972-1990年，大规模和超大规模集成电路计算机：微型计算机\n第五代1991年-至今，巨大规模集成电路计算机：单片机\n\n2.2 半导体存储器的发展\n20世纪50~60年代，所有计算机存储器都是由微小的铁磁体环\n\n1970年，仙童半导体公司生产出了第一个较大容量半导体存储器\n\n从1970年起，半导体存储器经历了11代：单个芯片\n1KB，4KB，16KB，64KB，256KB，1MB，4MB，16MB，64MB，256MB，GB\n\n其中 $1K=2^{10}$，$1M=2^{20}$，$1G=2^{30}$\n\n\n2.3 微处理器的发展\n1971年 Intel 公司开发出 Intel 4004。这是第一个将 CPU 的所有元件都放入同一块芯片内的产品，于是，微处理器诞生了。\n微处理器演变中的另一个主要进步是1972年出现的 Intel 8008，这是第一个8位微处理器，它比 4004 复杂一倍。\n1974年出现了 Intel 8080。这是第一个通用微处理器，而 4004 和 8008 是为特殊用途而设计的。8080 是为通用微机而设计的中央处理器。\n20世纪70年代末才出现强大的通用16位微处理器，8086便是其中之一。\n这一发展趋势中的另一阶段是在1981年，贝尔实验室和HP公司开发出了32位单片微处理器。\nIntel 于1985年推出了32位微处理器 Intel 80386。\n到现在的64位处理器和多核处理器\n\n2.4 计算机的性能指标\n吞吐量：表征一台计算机在某一时间间隔内能够处理的信息量，单位是字节/秒（B/S)。\n\n响应时间：表征从输入有效到系统产生响应之间的时间度量，用时间单位来度量，例如微秒（$10^{-6}S$）、纳秒（$10^{-9}S$）。\n\n利用率：表示在给定的时间间隔内，系统被实际使用的时间所占的比率，一般用百分比表示。\n\n处理机字长：指处理机运算器中一次能够完成二进制数运算的位数。当前处理机的字长有8位、16位、32位、64位。\n字长越长，表示计算的精度越高。\n\n总线宽度：一般指CPU中运算器与存储器之间进行互连的内部总线二进制位数。\n\n存储器容量：存储器中所有存储单元的总数目，通常用KB、MB、GB、TB来表示。\n其中 $K=2^{10}$，$M=2^{20}$，$G=2^{30}$，$T=2^{40}$，$B=8$ 位（1个字节）。\n存储器容量越大，记忆的二进制数越多。\n\n存储器带宽：存储器的速度指标，单位时间内从存储器读出的二进制数信息量，一般用字节数/秒表示。\n\n主频：CPU的工作节拍受主时钟控制，主时钟不断产生固定频率的时钟，主时钟的频率（$f$）叫CPU的主频。\n度量单位是MHz（兆赫兹）、GHz（吉赫兹）。例如 Pentium 系列机为60MHz~266MHz，而 Pentium 4 升至3.6GHz。\n\n时钟周期：主频的倒数（$T$），即 $T=\\frac{1}{f}$，度量单位是微秒、纳秒。\n\nCPU执行时间：表示CPU执行一段程序所占用的CPU时间，可用下式计算：\n\nCPU执行时间=CPU时钟周期数\\times CPU时钟周期长\nCPI：表示每条指令周期数，即执行一条指令所需的平均时钟周期数。用下式计算：\n\nCPI=\\frac{执行某段程序所需的CPU时钟周期数}{该程序包含的指令条数}\nMIPS：表示每秒百万条指令数，用下式计算：\n\nMIPS=\\frac{指令条数}{程序执行时间\\times10^6}=\\frac{时钟频率}{CPI\\times10^6}MIPS是单位时间内的执行指令数，所以MIPS值越高说明机器速度越快。\n\nTe：程序执行时间，用下式计算：\n\nTe=\\frac{指令条数}{MIPS\\times10^6}\nMFLOPS：表示每秒百万次浮点操作次数，用下式计算：\n\nMFLOPS=\\frac{程序中的浮点操作次数}{程序执行时间\\times10^6}MFLOPS是基于操作而非指令的，只能用来衡量机器浮点操作的性能，而不能体现机器的整体性能。\n\nTFLOPS：表示每秒万亿次浮点操作次数，该技术指标一般在超级计算机中使用。\n\n\n\n\n3 计算机的硬件3.1 硬件组成要素\n\n\n\n\n\n\n\n\n通过一个例子了解数字计算机的主要组成和工作原理。\n\n用一个算盘、一张带有横格的纸和一支笔，要求我们计算 $y=ax+b-c$ 这样一个题目。\n解题步骤和数据记录在横格纸上。\n\n3.1.1 手工模仿计算机工作\n3.1.2 数字计算机基本组成\n控制器：人的大脑的操作控制功能\n运算器：人的大脑的计算功能\n存储器：人的大脑记忆功能\n输入设备：交互接口，笔\n输出设备：交互接口：纸\n\n3.1.3 冯·诺依曼型计算机\n存储程序\n按地址自动执行\n五大部件：包括控制器、运算器、存储器、输入设备、输出设备\n以运算器为中心\n\n\n3.1.4 现代计算机的体系结构\n现代的计算机已转为以存储器为中心。\n\n\n\n计算机的组成结构\n\n\n\n3.2 运算器\n算术运算和逻辑运算\n\n在计算机中参与运算的数是二进制的\n\n运算器的长度一般是8、16、32或64位\n\n\n\n3.3 存储器\n存储数据和程序（指令）\n\n容量（存储单元、存储单元地址、容量地址）\n\n分类内存（ROM、RAM）、外存\n\n存储器单位\n\n\n\n3.4 控制器\n指令和程序：指令的形式（操作和地址码、存储程序的概念、指令中程序和数据的存放、指令系统）\n\n指令和数据存储\n\n控制器的基本任务：按照一定的顺序一条接着一条取指令、指令译码、执行指令。取指周期和执行周期\n\n控制器完全可以区分开哪些是指令字，哪些是数据字。一般来讲，取指周期中从内存读出的信息流是指令流，它流向控制器；而在执行器周期中从内存读出的信息流是数据流，它由内存流向运算器。\n\n\n\n3.5 适配器与I/O设备\n输入设备：把人们所熟悉的某种信息形式变换为机器内部所能接收和识别的二进制信息形式\n输出设备：把计算机处理的结果变换为人或其他机器设备所能接收和识别的信息形式\n适配器：它使得被连接的外围设备通过系统总线与主机进行联系，以便使主机和外围设备并行协调地工作\n总线：构成计算机系统的骨架，是多个系统部件之间进行数据传送的公共通路\n\n​        总之，现代电子计算机是由运算器、存储器、控制器、适配器、总线和输入/输出设备组成的。这也是人们常说的计算机硬件。\n4 计算机的软件4.1 软件的组成与分类​        计算机软件相对计算机硬件来说是看不见，是计算机系统中不可少的无形部件。主要有两大类：\n\n系统软件：用来简化程序设计，简化使用方法，提高计算机的使用效率，发挥和扩大计算机的功能及用途。它包括以下四类：\n\n各种服务性程序，如诊断程序、排错程序、练习程序等\n语言程序，如汇编程序、编译程序、解释程序等\n操作系统\n数据库管理系统\n\n\n应用软件\n用户利用计算机来解决某些问题而编制的程序，如工程设计程序、数据处理程序、自动控制程序、企业管理程序、情报检索程序、科学计算程序等\n\n\n4.2 软件的发展演变\n编程语言的发展\n\n手编程序：机器语言程序，手工编译二进制码\n汇编程序：符号语言程序，汇编程序汇编\n高级程序：算法语言／高级语言，机器编译程序／解释程序\n\n\n系统软件的发展\n\n操作系统\n分布式系统软件\n\n\n\n5 计算机系统的层次结构5.1 多级计算机系统​        五级计算机层次系统\n\n第一级是微程序设计级。这是一个实在的硬件级，它由机器硬件直接执行微指令。如果某一个应用程序直接用微指令来编写，那么可在这一级上运行应用程序。\n第二级是一般机器级，也称为机器语言级，它由微程序解释机器指令系统。这一级也是硬件级。\n第三级是操作系统级，它由操作系统程序实现。这些操作系统由机器指令和广义指令组成，广义指令是操作系统定义和解释的软件指令，所以这一级也称为混合级。\n第四级是汇编语言级，它给程序人员提供一种符号形式语言，以减少程序编写的复杂性。这一级由汇编程序支持和执行。如果应用程序采用汇编语言编写时，则机器必须要有这一级的功能；如果应用程序不采用汇编语言编写，则这一级可以不要。\n第五级是高级语言级，它是面向用户的，为方使用户编写应用程序而设置的。这一级由各种高级语言编译程序支持和执行。\n\n5.2 软件与硬件逻辑等价性\n随着大规模集成电路技术的发展和软件硬化的超势，计算机系统的软、硬件界限已经变得模糊了。因为任何操作可以由软件来实现，也可以由硬件来实现；任何指令的执行可以由硬件完成，也可以由软件来完成。\n任何操作可以由软件来实现也可以由硬件来实现（设计计算机系统时，应考虑各个方面的因素：价格、速度可靠性、存储容量、变更周期）\n实体硬件机功能的扩大\n固件的概念（功能上是软件，形态上是硬件）\n\n","slug":"1 计算机系统概论","date":"2022-10-02T10:37:36.000Z","categories_index":"Computer Organization","tags_index":"Computer Organization","author_index":"Brandon"}]